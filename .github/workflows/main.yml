name: Sync and Compile Rules

on:
  schedule:
    - cron: 0 17 * * *
  workflow_dispatch:
  push:
    paths:
      - 'DirectLite.list'
      - 'ProxyLite.list'
      - 'fakeip-fitter.list'
      - '.github/workflows/main.yml'
permissions:
  contents: write
  actions: write

jobs:
  convert_rules:
    name: Sync and Compile Rules
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install mihomo
        run: |
          version=$(curl -sL https://github.com/MetaCubeX/mihomo/releases/download/Prerelease-Alpha/version.txt)
          curl -sL "https://github.com/MetaCubeX/mihomo/releases/download/Prerelease-Alpha/mihomo-linux-amd64-${version}.gz" | \
            gunzip -c > /usr/local/bin/mihomo && chmod +x /usr/local/bin/mihomo


      - name: Fetch Rules
        run: |
          rm -rf rules/* # 删除旧文件
          mkdir -p rules/Domain rules/IP  rules/mrs rules/yaml # 确保目录存在        
          # 下载 规则文件
          curl -sL "https://raw.githubusercontent.com/aihddelyy/mihomo_rules/refs/heads/main/DirectLite.list" -o rules/DirectLite.list
          curl -sL "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Direct/Direct.list" -o rules/blackmatrix7_direct.list
          curl -sL "https://raw.githubusercontent.com/aihddelyy/mihomo_rules/refs/heads/main/ProxyLite.list" -o rules/ProxyLite.list
          curl -sL "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/AppleTV/AppleTV.list" -o rules/AppleTV.list
          curl -sL "https://raw.githubusercontent.com/Aethersailor/Custom_OpenClash_Rules/main/rule/Steam_CDN.list" -o rules/Steam_CDN.list
          curl -sL "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/UBI/UBI.list" -o rules/UBI.list
          curl -sL "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/NetEaseMusic/NetEaseMusic.list" -o rules/NetEaseMusic.list
          curl -sL "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/IPTVMainland/IPTVMainland.list" -o rules/IPTVMainland.list
          curl -sL "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PrivateTracker/PrivateTracker.list" -o rules/PrivateTracker.list
          curl -sL "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/AmazonIP/AmazonIP.list" -o rules/AmazonIP.list
          curl -sL "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Advertising/Advertising.list" -o rules/Ad.list
          curl -sL "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/WeChat/WeChat.list" -o rules/WeChat.list
          # 已经是yaml格式,无需处理
          curl -sL "https://raw.githubusercontent.com/217heidai/adblockfilters/refs/heads/main/rules/adblockmihomo.yaml" -o rules/yaml/adblockmihomo.yaml
          # 非classic规则list文件
          curl -sL "https://raw.githubusercontent.com/aihddelyy/mihomo_rules/refs/heads/main/fakeip-fitter.list" -o rules/DirectLite.list
          echo "payload:" > rules/Domain/fakeip-fitter.yaml
          sort -u rules/fakeip-fitter.list | awk '{print "  - \047" $0 "\047"}' >> rules/yaml/fakeip-fitter.yaml
        
      - name: Separate domain and ip rules
        run: |
          # 提取域名规则并保存到 *-domain.list
          grep -E '^(DOMAIN-SUFFIX|DOMAIN)' rules/DirectLite.list | grep -v '^DOMAIN-KEYWORD' > rules/Domain/DirectLite-domain.list
          grep -E '^(DOMAIN-SUFFIX|DOMAIN)' rules/blackmatrix7_direct.list | grep -v '^DOMAIN-KEYWORD' >> rules/Domain/DirectLite-domain.list        
          grep -E '^(DOMAIN-SUFFIX|DOMAIN)' rules/ProxyLite.list | grep -v '^DOMAIN-KEYWORD' > rules/Domain/ProxyLite-domain.list
          grep -E '^(DOMAIN-SUFFIX|DOMAIN)' rules/AppleTV.list | grep -v '^DOMAIN-KEYWORD' > rules/Domain/AppleTV-domain.list
          grep -E '^(DOMAIN-SUFFIX|DOMAIN)' rules/Steam_CDN.list | grep -v '^DOMAIN-KEYWORD' > rules/Domain/Steam_CDN-domain.list
          grep -E '^(DOMAIN-SUFFIX|DOMAIN)' rules/UBI.list | grep -v '^DOMAIN-KEYWORD' > rules/Domain/UBI-domain.list
          grep -E '^(DOMAIN-SUFFIX|DOMAIN)' rules/NetEaseMusic.list | grep -v '^DOMAIN-KEYWORD' > rules/Domain/NetEaseMusic-domain.list
          grep -E '^(DOMAIN-SUFFIX|DOMAIN)' rules/IPTVMainland.list | grep -v '^DOMAIN-KEYWORD' > rules/Domain/IPTVMainland-domain.list
          grep -E '^(DOMAIN-SUFFIX|DOMAIN)' rules/PrivateTracker.list | grep -v '^DOMAIN-KEYWORD' > rules/Domain/PrivateTracker-domain.list
          grep -E '^(DOMAIN-SUFFIX|DOMAIN)' rules/Ad.list | grep -v '^DOMAIN-KEYWORD' > rules/Domain/Ad-domain.list
          grep -E '^(DOMAIN-SUFFIX|DOMAIN)' rules/WeChat.list | grep -v '^DOMAIN-KEYWORD' > rules/Domain/WeChat-domain.list
        
          # 提取 IP 规则并保存到 *-ip.list (去掉 no-resolve)
          grep '^IP-CIDR' rules/DirectLite.list | sed 's/,no-resolve//' > rules/IP/DirectLite-ip.list
          grep '^IP-CIDR' rules/blackmatrix7_direct.list | sed 's/,no-resolve//' >> rules/IP/DirectLite-ip.list
          grep '^IP-CIDR' rules/ProxyLite.list | sed 's/,no-resolve//' > rules/IP/ProxyLite-ip.list    
          grep '^IP-CIDR' rules/Steam_CDN.list | sed 's/,no-resolve//' > rules/IP/Steam_CDN-ip.list        
          grep '^IP-CIDR' rules/NetEaseMusic.list | sed 's/,no-resolve//' > rules/IP/NetEaseMusic-ip.list
          grep '^IP-CIDR' rules/IPTVMainland.list | sed 's/,no-resolve//' > rules/IP/IPTVMainland-ip.list
          grep '^IP-CIDR' rules/PrivateTracker.list | sed 's/,no-resolve//' > rules/IP/PrivateTracker-ip.list
          grep '^IP-CIDR' rules/AmazonIP.list | sed 's/,no-resolve//' > rules/IP/Amazon-ip.list
          grep '^IP-CIDR' rules/Ad.list | sed 's/,no-resolve//' > rules/IP/Ad-ip.list

      - name: Convert IP Rules to YAML
        run: |
          chmod +x ./domain-yaml.sh
          ./domain-yaml.sh



      - name: Convert IP Rules to YAML
        run: |
          chmod +x ./ip-yaml.sh
          ./ip-yaml.sh



      - name: Convert rules to MRS
        run: |
          # 使用 mihomo 转换为 MRS 格式
          chmod +x ./mrs.sh
          ./mrs.sh

      - name: Clean up temporary files
        run: |
          # 删除临时文件
          rm -f rules/*.list

      - name: Commit and Push Changes
        run: |
          git add .
          status=$(git status --porcelain)
          if [ -n "$status" ]; then               
            files=$(git status --short | grep '\.mrs$' | awk '{print $2}' | xargs -I {} basename {})
            formatted_name=$(echo $files | sed 's/ /, /g')
            echo "文件${formatted_name}已经更新"
            teleram_message="我亲爱的✨主人✨：本次同步顺利完成，文件：${formatted_name}已经更新✌️💯💐！($(TZ='Asia/Shanghai' date +"%Y年%m月%d日%H点%M分"))"
            echo "${teleram_message}"            
            git commit -m "Updated $(TZ='Asia/Shanghai' date +"%Y年%m月%d日-%H点%M分")"
          else
            teleram_message="我亲爱的✨主人✨：本次同步没有文件更新。($(TZ='Asia/Shanghai' date +"%Y年%m月%d日%H点%M分"))"
            echo "没有文件变动，无需提交"
            echo "${teleram_message}"
          fi
          echo "MESSAGE=${teleram_message}" >> $GITHUB_ENV
          git push origin HEAD:main -f

      - name: Send message to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ env.MESSAGE }}

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 0
          keep_minimum_runs: 10
          token: ${{ secrets.GITHUB_TOKEN }}
